buildscript {
    repositories {
        maven { url 'https://fabric-artifacts.s3.amazonaws.com/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


def static getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion   //28
    buildToolsVersion rootProject.ext.buildToolsVersion  //28.0.2

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion  //15
        targetSdkVersion rootProject.ext.appTargetSdkVersion  //28
        versionCode rootProject.ext.versionCode  //52
        versionName rootProject.ext.versionName  //'5.5.0'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().toLocaleString()}\""
        multiDexEnabled true

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }

    signingConfigs {
        debug { storeFile file("debug.keystore") }

        release {
            storeFile file('release.keystore')
            storePassword 'thisiskeystorepassword'
            keyAlias 'nim_demo'
            keyPassword 'thisiskeypassword'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            manifestPlaceholders = [AMAP_KEY: "09fd4efd3e28e9bf1f449ecec7d34bfe"]
            ext.enableCrashlytics = false
        }

        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFile('proguard.cfg')
            signingConfig signingConfigs.release
            manifestPlaceholders = [AMAP_KEY: "ee20324fba1c7f4ad7a4a207e7f08e8d"]
            ext.enableCrashlytics = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'res-chatroom', 'res-rp']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs', 'libs-sdk']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    flavorDimensions "rc"


    compileOptions {
        sourceCompatibility rootProject.ext.appSourceCompatibility
        targetCompatibility rootProject.ext.appTargetCompatibility
    }
}

dependencies {
    implementation 'com.android.support:multidex:1.0.2'
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(path: ':uikit')
    //debugImplementation project(':plugins:sf')
    implementation 'com.google.firebase:firebase-messaging:11.6.0'
    implementation 'com.google.android.gms:play-services-base:11.6.0'
    implementation 'com.meizu.flyme.internet:push-internal:3.6.3@aar'
    implementation 'com.huawei.android.hms:push:2.6.0.301'
    implementation 'com.netease.nimlib:jsbridge:1.3.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    // Java8 support for Lifecycles
    implementation 'android.arch.lifecycle:common-java8:1.1.0'
    compile project(path: ':rtskit')
    //plant
    implementation 'com.android.support:appcompat-v7:28.0.0-rc01'
    ///implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:cardview-v7:28.0.0-rc01'
    implementation 'com.android.support:recyclerview-v7:28.0.0-rc01'
    implementation 'com.android.support:design:28.0.0-rc01'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.1.+'
    //implementation files('libs/hellocharts-library-1.5.8.jar')
    implementation 'com.android.support:support-v4:28.0.0-rc01'
    // LeanCloud 基础包
    implementation 'cn.leancloud.android:avoscloud-sdk:v4.7.3'
    // 推送与即时通讯需要的包
    implementation('cn.leancloud.android:avoscloud-push:v4.7.3@aar') { transitive = true }
    // LeanCloud 统计包
    implementation 'cn.leancloud.android:avoscloud-statistics:v4.7.3'
    // LeanCloud 用户反馈包
    implementation 'cn.leancloud.android:avoscloud-feedback:v4.7.3@aar'
    // avoscloud-sns：LeanCloud 第三方登录包
    implementation 'cn.leancloud.android:avoscloud-sns:v4.7.3@aar'
    implementation 'cn.leancloud.android:qq-sdk:1.6.1-leancloud'
    // LeanCloud 应用内搜索包
    implementation 'cn.leancloud.android:avoscloud-search:v4.7.3@aar'
    api 'com.alibaba:fastjson:1.2.37'
    api 'com.alibaba:fastjson:1.1.34.android'
    implementation project(':app')
}


apply plugin: 'com.google.gms.google-services'